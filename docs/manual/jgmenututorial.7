.\" Automatically generated by Pandoc 2.7.2
.\"
.TH "JGMENUTUTORIAL" "7" "18 May, 2019" "" ""
.hy
.SH NAME
.PP
The jgmenu tutorial
.SH INTRODUCTION
.PP
This tutorial aims to explain the usage of jgmenu through a set of
.PD 0
.P
.PD
lessons.
.SH TABLE OF CONTENTS
.PP
Lesson 1\ \ - Get started
.PD 0
.P
.PD
Lesson 2\ \ - \f[C]jgmenu_run\f[R]
.PD 0
.P
.PD
Lesson 3\ \ - Scripting with jgmenu
.PD 0
.P
.PD
Lesson 4\ \ - Descriptions
.PD 0
.P
.PD
Lesson 5\ \ - Icons
.PD 0
.P
.PD
Lesson 6\ \ - Submenus
.PD 0
.P
.PD
Lesson 7\ \ - XDG Application Menus
.PD 0
.P
.PD
Lesson 8\ \ - Disable directory structure
.PD 0
.P
.PD
Lesson 9\ \ - Apprend/Prepend and Separators
.PD 0
.P
.PD
Lesson 10 - CSV generators
.PD 0
.P
.PD
Lesson 11 - Search
.SH LESSONS
.SS Lesson 1 - Get started
.PP
After installing jgmenu, you can get going quickly by running:
.IP
.nf
\f[C]
jgmenu
\f[R]
.fi
.PP
That\[cq]s it!
.PP
There are three points worth noting about what you have just done:
.IP \[bu] 2
You should see a \[lq]Linux/BSD system\[rq] menu showing installed
.PD 0
.P
.PD
applications.
We call this menu \[lq]pmenu\[rq] (explained in lesson 7).
.IP \[bu] 2
You have just started a long-running application.
If you click
.PD 0
.P
.PD
outside the menu, press escape or select a menu item (using
.PD 0
.P
.PD
mouse or keyboard), the menu will no longer be visible but is
.PD 0
.P
.PD
still running.
It can be awoken (made visible) by executing
.PD 0
.P
.PD
\f[C]jgmenu_run\f[R].
.PP
If you wish to override any default settings, you can create a
.PD 0
.P
.PD
config file by running:
.IP
.nf
\f[C]
jgmenu init
\f[R]
.fi
.PP
Edit this config file (\[ti]/.config/jgmenu/jgmenurc) to suit your
.PD 0
.P
.PD
system.
Read the man page jgmenu(1) for further information.
.PP
If you have a config file at \[ti]/.config/jgmenu/jgmenurc and want to
.PD 0
.P
.PD
ignore it for the purposes of running one of the lessons, just use
.PD 0
.P
.PD
the command line argument \[lq]\[en]config-file=\[rq] without specifying
a file.
.SS Lesson 2 - \f[C]jgmenu_run\f[R]
.PP
You can also start jgmenu with
.IP
.nf
\f[C]
jgmenu_run
\f[R]
.fi
.PP
The advantage of this wrapper is that it will either awake jgmenu or
.PD 0
.P
.PD
start a new instance depending on if it is already running or not.
.PP
This makes it suitable for using with panels and keyboard shortcuts.
.PP
See https://github.com/johanmalm/jgmenu/wiki for futher info on
.PD 0
.P
.PD
panel and window manager integration.
.SS Lesson 3 - Scripting with jgmenu
.PP
From this point onwards, it is assumed that you understand basic
.PD 0
.P
.PD
shell usage including re-direction (e.g.\ <, >) and piping (e.g.\ |).
.PP
The syntax below (here-document) is used to denote the creation of a
.PD 0
.P
.PD
text file from whatever is between the EOFs.
You can of course use
.PD 0
.P
.PD
your favourite text editor instead.
.IP
.nf
\f[C]
cat >file <<EOF
foo
bar
EOF
\f[R]
.fi
.PP
There are many ways to run jgmenu.
In lesson 1, you saw jgmenu as a
.PD 0
.P
.PD
long-running application.
As we go through the next few lessons we
.PD 0
.P
.PD
will run jgmenu as a short-lived applications.
This means that it
.PD 0
.P
.PD
starts from scratch every time it is called.
.PP
So let\[cq]s get back to basics.
Try the following:
.IP
.nf
\f[C]
echo >foo.txt <<EOF
xterm
firefox
EOF
\f[R]
.fi
.PP
If you have not got used to the here-document syntax yet, it just
.PD 0
.P
.PD
means that you put the words \[lq]xterm\[rq] and \[lq]firefox\[rq] in a
text file
.PD 0
.P
.PD
(which you can of course do using a text editor).
Then do:
.IP
.nf
\f[C]
cat foo.txt | jgmenu --simple --icon-size=0
\f[R]
.fi
.PP
or
.IP
.nf
\f[C]
jgmenu --vsimple --csv-file=\[dq]foo.txt\[dq]
\f[R]
.fi
.PP
The option \f[C]--simple\f[R] make jgmenu short-lived, disables all
syncing
.PD 0
.P
.PD
with tint2 and reads menu items from \f[I]stdin\f[R].
.PP
The option \f[C]--icon-size=0\f[R], disables icons (i.e.\ it does not
just
.PD 0
.P
.PD
display them at zero size, it actually avoids loading them)
.PP
The command line argument \f[C]--vsimple\f[R] is the same as
\f[C]--simple\f[R], but also
.PD 0
.P
.PD
disables icons and ignores jgmenurc (if it exists).
.PP
If you want a menu to be launched by a single script, you could
.PD 0
.P
.PD
construct it like this:
.IP
.nf
\f[C]
cat <<EOF >menu.sh
#!/bin/sh
(
printf \[dq]foo\[rs]n\[dq]
printf \[dq]bar\[rs]n\[dq]
) | jgmenu --vsimple
EOF
chmod +x menu.sh
\&./menu.sh
\f[R]
.fi
.SS Lesson 4 - Descriptions
.PP
As you saw in the previous example, each line fed to \f[I]stdin\f[R]
becomes
.PD 0
.P
.PD
a menu item.
Any line containing two fields separated by a comma
.PD 0
.P
.PD
is parsed as \f[I]description\f[R],\f[I]command\f[R].
Consider the following
.PD 0
.P
.PD
CSV menu data:
.IP
.nf
\f[C]
Terminal,xterm
File Manager,pcmanfm
\f[R]
.fi
.PP
This lets you give a more meaningful description to each menu item.
.SS Lesson 5 - Icons
.PP
To display icons, you need to populate the third field.
.PP
By default, jgmenu will obtain the icon theme from xsettings (if
.PD 0
.P
.PD
it is running) or tint2rc (if it exists).
When running with the
.PD 0
.P
.PD
\[en]simple argument, make sure that \f[I]icon_theme\f[R] is set to
something
.PD 0
.P
.PD
sensible in your $HOME/.config/jgmenu/jgmenurc.
Consider the
.PD 0
.P
.PD
following CSV menu data:
.IP
.nf
\f[C]
Browser,firefox,firefox
File manager,pcmanfm,system-file-manager
Terminal,xterm,utilities-terminal
Lock,i3lock -c 000000,system-lock-screen
Exit to prompt,openbox --exit,system-log-out
Reboot,systemctl -i reboot,system-reboot
Poweroff,systemctl -i poweroff,system-shutdown
\f[R]
.fi
.PP
In the third field you can also specify the full path if you wish
.PD 0
.P
.PD
e.g.\ \[lq]/usr/share/icons/Faenza/places/22/folder.png\[rq]
.SS Lesson 6 - Submenus
.PP
So far we have looked at producing a single \[lq]root\[rq] menu only.
.PD 0
.P
.PD
jgmenu understands a small amount of markup and enables submenus
.PD 0
.P
.PD
by \[ha]tag() and \[ha]checkout().
Try this:
.IP
.nf
\f[C]
Terminal,xterm
File Manager,pcmanfm
Settings,\[ha]checkout(settings)

\[ha]tag(settings)
Set Background Image,nitrogen
\f[R]
.fi
.PP
In pseudo-code, build your CSV file as follows:
.IP
.nf
\f[C]
# the root-menu
sub1,\[ha]checkout(sub1)
sub2,\[ha]checkout(sub2)

# the first sub-menu
\[ha]tag(sub1)
item1.1
item1.2

# the second sub-menu
\[ha]tag(sub2)
item2.1
item2.2
\f[R]
.fi
.PP
\[ha]root() can be used instead of \[ha]checkout() in order to open the
.PD 0
.P
.PD
submenu in the parent window.
.SS Lesson 7 - XDG Application Menus
.PP
freedesktop.org have developed a menu standard which is adhered to
.PD 0
.P
.PD
by the big Desktop Environments.
We will refer to this type of menu
.PD 0
.P
.PD
as XDG.
jgmenu can run two types of XDG(ish) menus: pmenu and lx.
.PP
To understand the subtleties between them, you need a basic
.PD 0
.P
.PD
appreciataion of the XDG menu-spec and desktop-entry-spec.
See:
.PD 0
.P
.PD
http://standards.freedesktop.org/ for further information.
.PP
To keep things simple, when discussing XDG paths, only one location
.PD 0
.P
.PD
will be referred to rather than XDG variables and every possible
.PD 0
.P
.PD
location.
So for example, if \[lq]/usr/share\[rq] is quoted, it may refer to
.PD 0
.P
.PD
\[lq]/usr/local/share\[rq], \[lq]$HOME/.local/share\[rq], etc on your
system.
.PP
In brief, there are three types of files which define the Linux/BSD
.PD 0
.P
.PD
system menu:
.IP \[bu] 2
\&.menu (/etc/xdg/menus)
.PD 0
.P
.PD
These are XML files describing such things as the menu categories
.PD 0
.P
.PD
and directory structure.
.IP \[bu] 2
\&.directory (/usr/share/desktop-directories)
.PD 0
.P
.PD
These describe the menu directories
.IP \[bu] 2
\&.desktop (/usr/share/applications)
.PD 0
.P
.PD
Each application has a .desktop file associated with it.
These
.PD 0
.P
.PD
files contain most of the information needed to build a menu
.PD 0
.P
.PD
(e.g.\ \[lq]Name\[rq], \[lq]Exec command\[rq], \[lq]Icon\[rq],
\[lq]Category\[rq])
.PP
\f[C]pmenu\f[R] is written in python by \[at]o9000.
It uses .directory and
.PD 0
.P
.PD
\&.desktop files to build a menu, but ignores any .menu files.
.PD 0
.P
.PD
Instead of the structure specified in the .menu file, it simply maps
.PD 0
.P
.PD
each \[lq].desktop\[rq] application onto one of the \[lq].directory\[rq]
categories.
.PD 0
.P
.PD
If a matching \[lq].directory\[rq] category does not exist, it tries to
.PD 0
.P
.PD
cross-reference \[lq]additional categories\[rq] to \[lq]related
categories\[rq] in
.PD 0
.P
.PD
accordance with the XDG menu-spec.
.PD 0
.P
.PD
This is a generic approach which avoids Desktop Environment specific
.PD 0
.P
.PD
rules defined in the .menu file.
It ensures that all .desktop files
.PD 0
.P
.PD
are included in the menu.
.PP
\f[C]lx\f[R] uses LXDE\[cq]s libmenu-cache to generate an XDG compliant
menu
.PD 0
.P
.PD
including separators and internationalization.
It requires a recent
.PD 0
.P
.PD
version of libmenu-cache, so may not be included in your build.
.PP
Set \f[C]csv_cmd\f[R] in jgmenurc to specify which of these csv-commands
you
.PD 0
.P
.PD
wish to run.
.SS Comparison of application menu modules
.PP
This table summarise the key features of each module:
.IP
.nf
\f[C]
\[u2554]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2564]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2564]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2557]
\[u2551]                       \[br] pmenu           \[br] lx                  \[u2551] 
\[u2551] \[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[br]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[br]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2551]
\[u2551] speed (my machine)    \[br] 400 ms          \[br] 99 ms               \[u2551]
\[u2551] language              \[br] python          \[br] C                   \[u2551]
\[u2551] dependencies          \[br] python3         \[br] glib, libmenu-cache \[u2551]
\[u2551] XDG compliance        \[br] not intended    \[br] yes                 \[u2551]
\[u2551] localisation support  \[br] yes             \[br] yes                 \[u2551]
\[u2551] \[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[br]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[br]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2500]\[u2551] 
\[u2551] {ap,pre}pend support  \[br] yes             \[br] yes                 \[u2551]
\[u2551] \[aq]no-dirs\[aq] support     \[br] yes             \[br] yes                 \[u2551]
\[u2551] single window support \[br] yes             \[br] no                  \[u2551]
\[u2551] formatting            \[br] no              \[br] yes                 \[u2551]
\[u2551] generic name support  \[br] no              \[br] yes                 \[u2551]
\[u255A]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2567]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2567]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u2550]\[u255D]
\f[R]
.fi
.SS Lesson 8 - Disable directory structure
.PP
Many modern menus and launchers, ignore the XDG directory strcture.
.PP
With jgmenu, an XDG menu without any directories can be created in a
.PD 0
.P
.PD
number of ways:
.PP
The config options \f[C]csv_no_dirs = 1\f[R]
.PP
The CSV generators pmenu and lx understand the environment variable
.PD 0
.P
.PD
\f[C]JGMENU_NO_DIRS\f[R].
Set this variable (e.g.\ \f[C]JGMENU_NO_DIRS=1\f[R] to open
.PD 0
.P
.PD
a menu without a directory structure.
.SS Lesson 9 - Apprend/Prepend and Separators
.PP
When running pmenu or lx, you can add menu items to the top and
.PD 0
.P
.PD
bottom of the root menu by editing append.csv and/or prepend.csv in
.PD 0
.P
.PD
\[ti]/.config/jgmenu.
For example, try the following:
.PP
prepend.csv
.IP
.nf
\f[C]
Browser,firefox,firefox
File manager,pcmanfm,system-file-manager
Terminal,xterm,utilities-terminal
\[ha]sep()
\f[R]
.fi
.PP
append.csv
.IP
.nf
\f[C]
\[ha]sep()
Suspend,systemctl -i suspend,system-log-out
Reboot,systemctl -i reboot,system-reboot
Poweroff,systemctl -i poweroff,system-shutdown
\f[R]
.fi
.PP
In these example we have used the markup \[ha]sep(), which inserts a
.PD 0
.P
.PD
horizontal separator line.
Similarly, \[ha]sep(foo) inserts a text
.PD 0
.P
.PD
separator displaying \[lq]foo\[rq]
.SS Lesson 10 - CSV generators
.PP
In lesson 7, we introduced pmenu and lx.
These commands are
.PD 0
.P
.PD
referred to as \[lq]CSV generators\[rq] and are invoked as follows:
.IP
.nf
\f[C]
jgmenu_run <command>
\f[R]
.fi
.PP
This is the full list of built-in \[lq]CSV generators\[rq]:
.IP \[bu] 2
pmenu
.PD 0
.P
.PD
.IP \[bu] 2
lx
.PD 0
.P
.PD
.IP \[bu] 2
ob
.PP
They are documented by a man page or a simple \[en]help message.
.IP
.nf
\f[C]
man jgmenu-<command>
jgmenu_run <command> --help
\f[R]
.fi
.PP
Here follow some examples of how they can be used.
.PP
Specify CSV generator in the config file by setting \f[C]csv_cmd\f[R] in
.PD 0
.P
.PD
\f[C]\[ti]/.config/jgmenu/jgmenurc\f[R]
.IP
.nf
\f[C]
csv_cmd = jgmenu_run pmenu
\f[R]
.fi
.PP
Specify CSV generator on the command line
.IP
.nf
\f[C]
jgmenu --csv-cmd=\[dq]jgmenu_run pmenu\[dq]
\f[R]
.fi
.PP
Pipe the CSV output to jgmenu (using \f[C]--simple\f[R] to read
from\ \f[C]stdin\f[R])
.IP
.nf
\f[C]
jgmenu_run pmenu | jgmenu --simple
\f[R]
.fi
.PP
Create a pipemenu using \[ha]pipe() markup.
Consider this example
.IP
.nf
\f[C]
Terminal,xterm
File Manager,pcmanfm
\[ha]pipe(jgmenu_run pmenu)
\f[R]
.fi
.SS Lesson 11 - Search
.PP
jgmenu has a \f[I]search\f[R] capability.
When a menu is open, just start
.PD 0
.P
.PD
typing to invoke a filter.
.PP
A search box can be inserted using widgets (see github wiki).
.SH AUTHORS
Johan Malm.
